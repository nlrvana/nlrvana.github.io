{"version":3,"sources":["file:///Users/f10wers13eicheng/blog/origin/nlrvana-blog/themes/FixIt/assets/js/fixit-decryptor.js"],"sourcesContent":["class FixItDecryptor {\n  /**\n   * FixIt decryptor for encrypted pages and fixit-encryptor shortcode\n   * @param {Object} options\n   * @param {Function} [options.decrypted] [Lifecycle Hooks] handler after decrypting\n   * @param {Function} [options.reset] [Lifecycle Hooks] handler after encrypting again\n   * @param {Number} [options.duration=86400] number of seconds to cache decryption statistics. unit: s\n   */\n  constructor(options = {}) {\n    this.options = options || {};\n    this.options.duration = this.options.duration || 24 * 60 * 60; // default cache one day\n    this.decryptedEventSet = new Set();\n    this.partialDecryptedEventSet = new Set();\n    this.resetEventSet = new Set();\n    customElements.get('fixit-encryptor') || customElements.define('fixit-encryptor', class extends HTMLElement {});\n    customElements.get('cipher-text') || customElements.define('cipher-text', class extends HTMLElement {});\n  }\n\n  /**\n   * decrypt content\n   * @param {Element} $cipherText cipher text element\n   * @param {Element} $target target content element\n   * @param {String} salt salt string\n   */\n  #decryptContent($cipherText, $target, salt) {\n    try {\n      $target.innerHTML = CryptoJS.enc.Base64\n        .parse($cipherText.innerText.replace(salt, ''))\n        .toString(CryptoJS.enc.Utf8);\n      $cipherText.parentElement.classList.add('decrypted');\n    } catch (err) {\n      return console.error(err);\n    }\n    // decrypted hook\n    const eventSet = $target.id === 'content' ? this.decryptedEventSet : this.partialDecryptedEventSet;\n    for (const event of eventSet) {\n      event($target);\n    }\n  }\n\n  /**\n   * validate password\n   * @param {Element} $encryptor fixit-encryptor element\n   * @param {Function} callback callback function after password validation\n   * @returns \n   */\n  async #validatePassword($encryptor, callback) {\n    const $cipherText = $encryptor.querySelector('cipher-text');\n    const password = $cipherText.dataset.password;\n    const inputEl = $encryptor.querySelector('.fixit-decryptor-input');\n    const input = inputEl.value.trim();\n    // Warning: insufficient-password-hash Weak hashing algorithms for passwords poses security risks.\n    const { h64ToString } = await xxhash();\n    const inputHash = h64ToString(input);\n    const inputSha256 = CryptoJS.SHA256(input).toString();\n    const saltLen = input.length % 2 ? input.length : input.length + 1;\n\n    inputEl.value = '';\n    inputEl.blur();\n    if (!input) {\n      alert('Please enter the correct password!');\n      return console.warn('Please enter the correct password!');\n    }\n    if (inputHash !== password) {\n      alert(`Password error: ${input} not the correct password!`);\n      return console.warn(`Password error: ${input} not the correct password!`);\n    }\n    callback($cipherText, inputHash, inputSha256.slice(saltLen));\n  }\n\n  /**\n   * initialize FixIt decryptor\n   * @param {Object} options\n   * @param {Boolean} options.all whether to decrypt all content\n   * @param {String} options.shortcode whether to decrypt fixit-encryptor shortcode\n   */\n  init({ all, shortcode }) {\n    this.addEventListener('decrypted', this.options?.decrypted);\n    this.addEventListener('partial-decrypted', this.options?.partialDecrypted);\n    this.addEventListener('reset', this.options?.reset);\n    const $content = document.querySelector('#content');\n    if (shortcode) {\n      this.addEventListener('decrypted', () =\u003e {\n        this.initShortcodes($content);\n      });\n      this.addEventListener('partial-decrypted', ($parent) =\u003e {\n        this.initShortcodes($parent);\n      });\n    }\n    if (all) {\n      this.initPage();\n    } else if (shortcode) {\n      this.initShortcodes($content);\n    }\n  }\n\n  /**\n   * initialize FixIt decryptor for the encrypted pages\n   */\n  initPage() {\n    this.validateCache();\n    const $encryptor = document.querySelector('article \u003e fixit-encryptor');\n    const $content = document.querySelector('#content');\n\n    const decryptorHandler = () =\u003e {\n      this.#validatePassword($encryptor, ($cipherText, passwordHash, salt) =\u003e {\n        // cache decryption statistics\n        window.localStorage?.setItem(\n          `fixit-decryptor/#${location.pathname}`,\n          JSON.stringify({\n            expiration: Math.ceil(Date.now() / 1000) + this.options.duration,\n            password: passwordHash,\n            salt,\n          })\n        );\n        this.#decryptContent($cipherText, $content, salt);\n      });\n    };\n\n    // bind decryptor input enter keydown event\n    $encryptor.querySelector('.fixit-decryptor-input')?.addEventListener('keydown', (e) =\u003e {\n      if (e.key === 'Enter') {\n        e.preventDefault();\n        decryptorHandler();\n      }\n    });\n\n    // bind decryptor button click event\n    $encryptor.querySelector('.fixit-decryptor-btn')?.addEventListener('click', (e) =\u003e {\n      e.preventDefault();\n      decryptorHandler();\n    });\n\n    // bind encryptor button click event\n    $encryptor.querySelector('.fixit-encryptor-btn')?.addEventListener('click', (e) =\u003e {\n      e.preventDefault();\n      $encryptor.classList.remove('decrypted');\n      $content.innerHTML = '';\n      window.localStorage?.removeItem(`fixit-decryptor/#${location.pathname}`);\n      // reset hook\n      for (const event of this.resetEventSet) {\n        event();\n      }\n    });\n\n    $encryptor.classList.add('initialized');\n  }\n\n  /**\n   * initialize FixIt decryptor for fixit-encryptor shortcodes\n   * @param {Element} $parent parent element\n   */\n  initShortcodes($parent) {\n    const $shortcodes = $parent.querySelectorAll('fixit-encryptor:not(.initialized)');\n\n    $shortcodes.forEach($shortcode =\u003e {\n      const decryptorHandler = () =\u003e {\n        const $content = $shortcode.querySelector('.decryptor-content');\n        this.#validatePassword($shortcode, ($cipherText, passwordHash, salt) =\u003e {\n          this.#decryptContent($cipherText, $content, salt);\n        });\n      };\n\n      // bind decryptor input enter keydown event\n      $shortcode.querySelector('.fixit-decryptor-input')?.addEventListener('keydown', function (e) {\n        if (e.key === 'Enter') {\n          e.preventDefault();\n          decryptorHandler();\n        }\n      });\n\n      // bind decryptor button click event\n      $shortcode.querySelector('.fixit-decryptor-btn')?.addEventListener('click', function (e) {\n        e.preventDefault();\n        decryptorHandler();\n      });\n\n      $shortcode.classList.add('initialized');\n    });\n  }\n\n  /**\n   * validate the cached decryption statistics in localStorage\n   * @returns {FixItDecryptor}\n   */\n  validateCache() {\n    const $content = document.querySelector('#content');\n    const $encryptor = document.querySelector('article \u003e fixit-encryptor');\n    const $cipherText = $encryptor.querySelector('cipher-text');\n    const password = $cipherText.dataset.password;\n    const cachedStat = JSON.parse(window.localStorage?.getItem(`fixit-decryptor/#${location.pathname}`));\n\n    if (!cachedStat || cachedStat?.password !== password || Number(cachedStat?.expiration) \u003c Math.ceil(Date.now() / 1000)) {\n      if (cachedStat) {\n        window.localStorage?.removeItem(`fixit-decryptor/#${location.pathname}`);\n        console.warn('The password has expired, please re-enter!');\n      }\n      return this;\n    }\n    this.#decryptContent($cipherText, $content, cachedStat.salt);\n    return this;\n  }\n\n  /**\n   * add event listener for FixIt Decryptor\n   * @param {String} event event name\n   * @param {Function} listener event handler\n   * @returns {FixItDecryptor}\n   */\n  addEventListener(event, listener) {\n    if (typeof listener !== 'function') {\n      return this;\n    }\n    switch (event) {\n      case 'decrypted':\n        this.decryptedEventSet.add(listener);\n        break;\n      case 'partial-decrypted':\n        this.partialDecryptedEventSet.add(listener);\n        break;\n      case 'reset':\n        this.resetEventSet.add(listener);\n        break;\n      default:\n        console.warn(`Event ${event} not found in FixIt Decryptor!`);\n        break;\n    }\n    return this;\n  }\n\n  /**\n   * remove event listener for FixIt Decryptor\n   * @param {String} event event name\n   * @param {Function} listener event handler\n   * @returns {FixItDecryptor}\n   */\n  removeEventListener(event, listener) {\n    if (typeof listener !== 'function') {\n      return this;\n    }\n    switch (event) {\n      case 'decrypted':\n        this.decryptedEventSet.delete(listener);\n        break;\n      case 'partial-decrypted':\n        this.partialDecryptedEventSet.delete(listener);\n        break;\n      case 'reset':\n        this.resetEventSet.delete(listener);\n        break;\n      default:\n        console.warn(`Event ${event} not found in FixIt Decryptor!`);\n        break;\n    }\n    return this;\n  }\n}\n\nwindow.FixItDecryptor = FixItDecryptor;\n\n"],"mappings":"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","names":[]}